# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: osx
  pool:
    vmImage: macOS-13
  strategy:
    matrix:
      osx_64_cross_target_platformosx-arm64freethreadingnopy_implcp313version3.13:
        CONFIG: osx_64_cross_target_platformosx-arm64freethreadingnopy_implcp313version3.13
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_hd09259db5e
      osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.10:
        CONFIG: osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.10
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_h99b06b789e
      osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.11:
        CONFIG: osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.11
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_hf0402b30f3
      osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.12:
        CONFIG: osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.12
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_h69062f43b9
      osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.8:
        CONFIG: osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.8
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_h32d3bf14d8
      osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.9:
        CONFIG: osx_64_cross_target_platformosx-arm64freethreadingnopy_implcpythonversion3.9
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_h2aae4c15a6
      osx_64_cross_target_platformosx-arm64freethreadingyespy_implcp313tversion3.13:
        CONFIG: osx_64_cross_target_platformosx-arm64freethreadingyespy_implcp313tversion3.13
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_cross_target_platformosx-arm_h2a8f987f6b
      osx_arm64_cross_target_platformosx-64freethreadingnopy_implcp313version3.13:
        CONFIG: osx_arm64_cross_target_platformosx-64freethreadingnopy_implcp313version3.13
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_hc1c3a65c16
      osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.10:
        CONFIG: osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.10
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_h736e321451
      osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.11:
        CONFIG: osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.11
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_h087e1988c2
      osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.12:
        CONFIG: osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.12
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_h3b75a7a330
      osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.8:
        CONFIG: osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.8
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_h5169f9cf7e
      osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.9:
        CONFIG: osx_arm64_cross_target_platformosx-64freethreadingnopy_implcpythonversion3.9
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_hbb4c7a7751
      osx_arm64_cross_target_platformosx-64freethreadingyespy_implcp313tversion3.13:
        CONFIG: osx_arm64_cross_target_platformosx-64freethreadingyespy_implcp313tversion3.13
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_cross_target_platformosx-_he9ad6abad9
  timeoutInMinutes: 360
  variables: {}

  steps:
  # TODO: Fast finish on azure pipelines?
  - script: |
      export CI=azure
      export flow_run_id=azure_$(Build.BuildNumber).$(System.JobAttempt)
      export remote_url=$(Build.Repository.Uri)
      export sha=$(Build.SourceVersion)
      export OSX_FORCE_SDK_DOWNLOAD="1"
      export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
        export IS_PR_BUILD="True"
      else
        export IS_PR_BUILD="False"
      fi
      ./.scripts/run_osx_build.sh
    displayName: Run OSX build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
  - script: |
      export CI=azure
      export CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      export CONDA_BLD_DIR=/Users/runner/miniforge3/conda-bld
      export ARTIFACT_STAGING_DIR="$(Build.ArtifactStagingDirectory)"
      # Archive everything in CONDA_BLD_DIR except environments
      export BLD_ARTIFACT_PREFIX=conda_artifacts
      if [[ "$AGENT_JOBSTATUS" == "Failed" ]]; then
        # Archive the CONDA_BLD_DIR environments only when the job fails
        export ENV_ARTIFACT_PREFIX=conda_envs
      fi
      ./.scripts/create_conda_build_artifacts.sh
    displayName: Prepare conda build artifacts
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: Store conda build artifacts
    condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(BLD_ARTIFACT_PATH)
      artifactName: $(BLD_ARTIFACT_NAME)

  - task: PublishPipelineArtifact@1
    displayName: Store conda build environment artifacts
    condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(ENV_ARTIFACT_PATH)
      artifactName: $(ENV_ARTIFACT_NAME)